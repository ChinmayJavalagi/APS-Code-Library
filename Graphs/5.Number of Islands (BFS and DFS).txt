# TC - N X M

#BFS


import sys
from collections import deque
sys.setrecursionlimit(10**8)
class Solution:
    def numIslands(self,grid):
        #code here
        cnt = 0
        n = len(grid)
        m = len(grid[0])
        visited = [[0 for i in range(m)] for j in range(n)]
        for i in range(n):
            for j in range(m):
                if visited[i][j] == False and grid[i][j] == 1:
                    self.bfs(grid, visited, i, j)
                    cnt+=1
            
        return cnt
        
    
    def bfs(self, grid, visited, row, col):
        
        n = len(grid)
        m = len(grid[0])
        
        q = deque()
        q.append([row, col])
        visited[row][col] = 1
        
        while q:
            s = q.popleft()
            row = s[0]
            col = s[1] 
            for drow in range(-1, 2):
                for dcol in range(-1, 2):
                    nrow = row + drow
                    ncol = col + dcol
                    
                    if nrow>=0 and nrow<n and ncol>=0 and ncol<m and not visited[nrow][ncol] and grid[nrow][ncol] == 1:
                        visited[nrow][ncol] = 1
                        q.append([nrow, ncol])
 





#DFS


def dfs(self, grid, visited, row, col):
        
        n = len(grid)
        m = len(grid[0])
        
        visited[row][col] = 1
        
        for drow in range(-1, 2):
            for dcol in range(-1, 2):
                nrow = row + drow
                ncol = col + dcol
                if nrow>=0 and nrow<n and ncol>=0 and ncol<m and not visited[nrow][ncol] and grid[nrow][ncol] == 1:
                    visited[nrow][ncol]
                    self.dfs(grid, visited, nrow, ncol)
